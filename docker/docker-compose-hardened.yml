# 2025-07-20 CH41B01
# Security-Hardened N8N Deployment

services:
  # Caddy Reverse Proxy with HTTPS and Security Headers
  caddy:
    image: caddy:2-alpine
    container_name: n8n-caddy-hardened
    restart: unless-stopped
    ports:
      - "127.0.0.1:443:443"  # Bind only to localhost
      - "127.0.0.1:80:80"    # Bind only to localhost
    volumes:
      - ./security/Caddyfile-hardened:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config
    networks:
      - n8n-secure-network
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD", "caddy", "validate", "--config", "/etc/caddy/Caddyfile"]
      interval: 30s
      timeout: 10s
      retries: 3

  # N8N Application with Security Hardening
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-app-hardened
    restart: unless-stopped
    expose:
      - "5678"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_ENCRYPTION_KEY_FILE=/run/secrets/n8n_encryption_key
      - N8N_USER_FOLDER=/home/node/.n8n
      - N8N_LOG_LEVEL=warn
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER_FILE=/run/secrets/n8n_user
      - N8N_BASIC_AUTH_PASSWORD_FILE=/run/secrets/n8n_password
      - N8N_DISABLE_UI=false
      - N8N_SECURE_COOKIE=true
      - WEBHOOK_URL=https://localhost
      - NODE_ENV=production
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE_FILE=/run/secrets/postgres_db
      - DB_POSTGRESDB_USER_FILE=/run/secrets/postgres_user
      - DB_POSTGRESDB_PASSWORD_FILE=/run/secrets/postgres_password
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_VERSION_NOTIFICATIONS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - TZ=UTC
    volumes:
      - n8n-data:/home/node/.n8n
      - n8n-logs:/var/log/n8n
    networks:
      - n8n-secure-network
    depends_on:
      - postgres
      - caddy
    secrets:
      - n8n_encryption_key
      - n8n_user
      - n8n_password
      - postgres_db
      - postgres_user  
      - postgres_password
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/cache:noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # PostgreSQL with Security Hardening
  postgres:
    image: postgres:16-alpine
    container_name: n8n-postgres-hardened
    restart: unless-stopped
    environment:
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./security/postgresql-hardened.conf:/etc/postgresql/postgresql.conf:ro
    networks:
      - n8n-secure-network
    expose:
      - "5432"
    secrets:
      - postgres_db
      - postgres_user
      - postgres_password
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
      - /run:noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $(cat /run/secrets/postgres_user) -d $(cat /run/secrets/postgres_db)"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Grafana with Security Hardening
  grafana:
    image: grafana/grafana:latest
    container_name: n8n-grafana-hardened
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SERVER_PROTOCOL=http
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=https://localhost/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SECURITY_COOKIE_SAMESITE=strict
      - GF_LOG_LEVEL=warn
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - n8n-secure-network
    secrets:
      - grafana_password
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    user: "472:472"
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

# Docker Secrets (files containing sensitive data)
secrets:
  n8n_encryption_key:
    file: ./secrets/n8n_encryption_key.txt
  n8n_user:
    file: ./secrets/n8n_user.txt
  n8n_password:
    file: ./secrets/n8n_password.txt
  postgres_db:
    file: ./secrets/postgres_db.txt
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
  grafana_password:
    file: ./secrets/grafana_password.txt

volumes:
  caddy-data:
  caddy-config:
  n8n-data:
  n8n-logs:
  postgres-data:
  grafana-data:

networks:
  n8n-secure-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
