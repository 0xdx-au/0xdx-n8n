# 2025-07-20 CH41B01
# Security-Hardened Caddy Configuration

{
    # Global configuration
    email security@localhost
    
    # Security settings
    servers {
        protocols h1 h2 h2c
        timeouts {
            read_header 10s
            read_body 30s
            write 30s
            idle 120s
        }
    }
    
    # Rate limiting
    order rate_limit before basicauth
}

# Main N8N HTTPS site
localhost {
    # TLS configuration with strong settings
    tls internal {
        protocols tls1.2 tls1.3
        ciphers TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    }
    
    # Security headers
    header {
        # HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        
        # Content Security Policy
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws://localhost wss://localhost; frame-ancestors 'none'; base-uri 'self'; form-action 'self';"
        
        # Additional security headers
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), vr=(), accelerometer=(), gyroscope=(), magnetometer=(), midi=()"
        
        # Hide server information
        -Server
        -X-Powered-By
        
        # Cache control for security
        Cache-Control "no-cache, no-store, must-revalidate"
        Pragma "no-cache"
        Expires "0"
    }
    
    # Rate limiting
    rate_limit {
        zone dynamic {
            key {remote_host}
            events 100
            window 1m
        }
        zone auth {
            key {remote_host}
            events 5
            window 1m
        }
    }
    
    # Apply stricter limits to auth endpoints
    @auth_paths path /rest/login* /rest/oauth* /webhook*
    rate_limit @auth_paths auth
    
    # Health check endpoint (unrestricted for monitoring)
    handle /health {
        respond "OK" 200
    }
    
    # Grafana dashboard (with auth)
    handle_path /grafana/* {
        reverse_proxy grafana:3000 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Forwarded-Host {host}
            
            health_uri /api/health
            health_interval 30s
            health_timeout 10s
        }
    }
    
    # Main N8N application
    handle {
        reverse_proxy n8n:5678 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Forwarded-Host {host}
            header_up Connection {>Connection}
            header_up Upgrade {>Upgrade}
            
            # WebSocket support
            @websockets header Connection *Upgrade*
            @websockets header Upgrade websocket
            
            # Health checks
            health_uri /healthz
            health_interval 30s
            health_timeout 10s
            health_status 2xx
            
            # Failover
            fail_duration 30s
            max_fails 3
            unhealthy_status 5xx
            unhealthy_latency 10s
            
            # Remove server headers
            header_down -Server
            header_down -X-Powered-By
        }
    }
    
    # Error handling
    handle_errors {
        respond "Access Denied" 403
    }
    
    # Security logging
    log {
        output file /var/log/caddy/access.log {
            roll_size 50mb
            roll_keep 5
        }
        format json
        level INFO
    }
}

# HTTP to HTTPS redirect
http://localhost {
    redir https://{host}{uri} permanent
}
