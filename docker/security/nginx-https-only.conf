resolver 127.0.0.11 valid=30s;

# HTTP to HTTPS redirect (mandatory)
server {
    listen 80;
    server_name localhost;
    
    # Force HTTPS redirect for ALL requests
    return 301 https://$server_name$request_uri;
}

# HTTPS server with TLS 1.3 mandatory
server {
    listen 443 ssl;
    http2 on;
    server_name localhost;

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    # TLS 1.3 ONLY - NO LOWER VERSIONS
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    # Let OpenSSL handle TLS 1.3 ciphers (they are secure by default)
    
    # SSL session settings for performance
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP stapling for enhanced security
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers (HTTPS mandatory)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; font-src 'self' data:; img-src 'self' data: blob:; connect-src 'self' wss:; frame-ancestors 'none';" always;
    
    # Disable server tokens
    server_tokens off;

    # Dashboard root
    location / {
        root /usr/share/nginx/html/dashboard;
        index index.html;
        try_files $uri $uri/ =404;
        
        # Additional security for dashboard
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
    }

    # Health check (HTTPS only)
    location /health {
        access_log off;
        return 200 "healthy-https\n";
        add_header Content-Type text/plain;
    }

    # System status endpoint (HTTPS only)
    location /status {
        access_log off;
        alias /usr/share/nginx/html/dashboard/status.json;
        add_header Content-Type application/json;
    }

    # Status page endpoint (HTTPS only) 
    location /status.json {
        access_log off;
        alias /usr/share/nginx/html/dashboard/status.json;
        add_header Content-Type application/json;
    }

    # N8N Application - HTTPS with WSS upgrade
    location /n8n/ {
        set $upstream http://n8n-app:5678/;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        
        # WebSocket upgrade for HTTPS
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Prefix /n8n;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts and limits
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        client_max_body_size 50M;
        
        # Force secure context
        proxy_set_header X-Forwarded-Ssl on;
    }
    
    # N8N Static Assets - HTTPS required
    location ~ ^/(assets|rest|form|webhook|healthz)/ {
        set $upstream http://n8n-app:5678;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 50M;
        
        # Force secure context
        proxy_set_header X-Forwarded-Ssl on;
    }

    # Grafana - HTTPS with secure headers
    location /grafana/ {
        set $upstream http://n8n-grafana:3000;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # Force secure context for Grafana
        proxy_set_header X-Forwarded-Ssl on;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security-focused logging
    access_log /var/log/nginx/https_access.log;
    error_log /var/log/nginx/https_error.log warn;
}
